This is a file I made to understand Chakra UI.

In order to learn Chakra UI, I follow Net Ninja's crach course on YouTube: https://youtu.be/iXsM6NkEmFc?si=FKriCfKUShjjLyDE

Download the chakra package. Get the ChakraProvider and wrap the application to get access to the components.

Notable components: Container (centers stuff), Box (like a div), Text, Heading.

You can style the components using props of the components: p={30}, bg="red.100", etc.

There is a sx prop that lets you pass an object with styles: sx = {boxStyles}

You can implement flex box layouts with the Flex component. It has attributes like justify, alignItems, 
gap, etc. You can add a spacer tag: <Spacer/>. You can also take advangtage of HStack and VStack. 

If you want to implement a grid layout, you can use SimpleGrid component or, with more flexibility Grid and
GridItem.

You can apply responsive design using breakpoints:
fontSize={{base:'24px', md: '40px', lg: '56px'}} or
color={{base: 'pink', md: 'blue', lg: 'green'}}

A convenient component of Chakra is List and ListItem. You can use it to arrange react-router-dom NavLinks 
for a sidebar with links. You can add spacing with spacing={4}

Chakra also offers you icons that you can use. You will need to install them: npm i @chakra-ui/icons.
To implement a List with an icons, use ListIcon component with its as={} property. 

While Chakra does not provide a complete form component, there are components that you can use to build
a form yourself: FormControl, FormHelperText, FormLabel, Input, CheckBox, Button

You can raise toasts - which are small pop-up messages that you can close if you want. A toast is not 
implemented as a component but as a hook that returns a function that you can call. The function toast()
accepts an object with parameters of the toast you want to raise, like title/description/isClosable/status...

You can use avatars. Avatars can also use photos. 


All the Chakra UI components use what is known as a theme. Themes have a lot of values that style the 
whole website: colors, margins, badding, fonts, etc. And of course, you can customize the theme.

Go to main.jsx and import extendTheme from chakra. Then write: cosnt theme = extendTheme({...}).
You pass in the properties that you want to change. And then you pass the theme to the ChakraProvider.


